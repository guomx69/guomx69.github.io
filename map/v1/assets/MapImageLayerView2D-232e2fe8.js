import{aw as a,ax as o,aN as g,ay as m,b6 as l,ap as d,au as u,a7 as c,z as y}from"./index-d4439fba.js";import{a as f}from"./BitmapContainer-989d85e9.js";import{f as x,d as w}from"./LayerView-f3936c89.js";import{o as v}from"./GraphicsView2D-2082ab53.js";import{n as _}from"./HighlightGraphicContainer-d82a29ce.js";import{v as H}from"./ExportStrategy-dc4d3d05.js";import{a as I}from"./RefreshableLayerView-16d7b284.js";import{U,r as V}from"./drapedUtils-1a468d1e.js";import"./WGLContainer-383a9410.js";import"./definitions-74ad6ac7.js";import"./VertexArrayObject-42a98d28.js";import"./Texture-0cb1f60b.js";import"./enums-b14466b3.js";import"./VertexElementDescriptor-2925c6af.js";import"./color-9dbb79eb.js";import"./enums-55085e26.js";import"./number-e491b09e.js";import"./ProgramTemplate-f2a4c3cb.js";import"./GeometryUtils-3c96c3cc.js";import"./alignmentUtils-ae955d28.js";import"./StyleDefinition-fbc907c2.js";import"./config-1337d16e.js";import"./Container-6e479c6e.js";import"./EffectView-1ebf3123.js";import"./earcut-3cf5ced9.js";import"./cimAnalyzer-228b82f1.js";import"./fontUtils-dfb0dc71.js";import"./BidiEngine-9a40f2f4.js";import"./GeometryUtils-53652037.js";import"./Rect-ea14f53a.js";import"./quantizationUtils-b079a230.js";import"./floatRGBA-78333eeb.js";import"./normalizeUtilsSync-1ff8027c.js";import"./projectionSupport-2af61e7e.js";import"./json-48e3ea08.js";import"./AttributeStoreView-61b17f15.js";import"./TiledDisplayObject-3d778797.js";import"./visualVariablesUtils-5bd1b0d1.js";import"./ExpandedCIM-5eb8fb15.js";import"./util-2bc45a5e.js";import"./Matcher-05b0d370.js";import"./tileUtils-c2f19f52.js";import"./TurboLine-dbc7c8f3.js";import"./ComputedAttributeStorage-d1a71403.js";import"./arcadeTimeUtils-4ea33e2f.js";import"./executionError-c92d3b85.js";import"./BaseGraphicContainer-880a64e7.js";import"./FeatureContainer-b0866c89.js";import"./TileContainer-7273c9d9.js";import"./vec3f32-ad1dc57f.js";import"./Bitmap-9b0ed363.js";import"./popupUtils-dc914887.js";const P=t=>{let e=class extends t{initialize(){this.exportImageParameters=new l({layer:this.layer})}destroy(){this.exportImageParameters.destroy(),this.exportImageParameters=null}get floors(){var i;return((i=this.view)==null?void 0:i.floors)??null}get exportImageVersion(){var i;return(i=this.exportImageParameters)==null||i.commitProperty("version"),this.commitProperty("timeExtent"),this.commitProperty("floors"),(this._get("exportImageVersion")||0)+1}canResume(){var i;return!!super.canResume()&&!((i=this.timeExtent)!=null&&i.isEmpty)}};return a([o()],e.prototype,"exportImageParameters",void 0),a([o({readOnly:!0})],e.prototype,"floors",null),a([o({readOnly:!0})],e.prototype,"exportImageVersion",null),a([o()],e.prototype,"layer",void 0),a([o()],e.prototype,"suspended",void 0),a([o(g)],e.prototype,"timeExtent",void 0),e=a([m("esri.views.layers.MapImageLayerView")],e),e};let s=class extends P(I(x(w))){constructor(){super(...arguments),this._highlightGraphics=new d,this._updateHash=""}fetchPopupFeatures(t,e){return this._popupHighlightHelper.fetchPopupFeatures(t,e)}update(t){const e=`${this.exportImageVersion}/${t.state.id}/${t.pixelRatio}/${t.stationary}`;this._updateHash!==e&&(this._updateHash=e,this.strategy.update(t).catch(r=>{u(r)||c.getLogger(this).error(r)}),t.stationary&&this._popupHighlightHelper.updateHighlightedFeatures(t.state.resolution)),this._highlightView.processUpdate(t)}attach(){const{imageMaxWidth:t,imageMaxHeight:e,version:r}=this.layer,i=r>=10.3,n=r>=10;this._bitmapContainer=new f,this.container.addChild(this._bitmapContainer),this._highlightView=new v({view:this.view,graphics:this._highlightGraphics,requestUpdateCallback:()=>this.requestUpdate(),container:new _(this.view.featuresTilingScheme),defaultPointSymbolEnabled:!1}),this.container.addChild(this._highlightView.container),this._popupHighlightHelper=new U({createFetchPopupFeaturesQueryGeometry:(p,h)=>V(p,h,this.view),highlightGraphics:this._highlightGraphics,highlightGraphicUpdated:(p,h)=>{this._highlightView.graphicUpdateHandler({graphic:p,property:h})},layerView:this,updatingHandles:this.updatingHandles}),this.strategy=new H({container:this._bitmapContainer,fetchSource:this.fetchImageBitmap.bind(this),requestUpdate:this.requestUpdate.bind(this),imageMaxWidth:t,imageMaxHeight:e,imageRotationSupported:i,imageNormalizationSupported:n,hidpi:!0}),this.addAttachHandles(y(()=>this.exportImageVersion,()=>this.requestUpdate())),this.requestUpdate()}detach(){this.strategy.destroy(),this.container.removeAllChildren(),this._bitmapContainer.removeAllChildren(),this._highlightView.destroy(),this._popupHighlightHelper.destroy()}moveStart(){}viewChange(){}moveEnd(){this.requestUpdate()}supportsSpatialReference(t){return this.layer.serviceSupportsSpatialReference(t)}async doRefresh(){this._updateHash="",this.requestUpdate()}isUpdating(){return this.strategy.updating||this.updateRequested}fetchImage(t,e,r,i){return this.layer.fetchImage(t,e,r,{timeExtent:this.timeExtent,floors:this.floors,...i})}fetchImageBitmap(t,e,r,i){return this.layer.fetchImageBitmap(t,e,r,{timeExtent:this.timeExtent,floors:this.floors,...i})}highlight(t){return this._popupHighlightHelper.highlight(t)}};a([o()],s.prototype,"strategy",void 0),a([o()],s.prototype,"updating",void 0),s=a([m("esri.views.2d.layers.MapImageLayerView2D")],s);const Pt=s;export{Pt as default};
