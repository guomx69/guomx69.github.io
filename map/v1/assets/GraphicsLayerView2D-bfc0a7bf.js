import{x as p,aD as a,a6 as o,aE as g,aw as s,ax as m,ay as l}from"./index-d4439fba.js";import{f as c,d as n}from"./LayerView-f3936c89.js";import{i as d}from"./GraphicContainer-328463a0.js";import{o as u}from"./GraphicsView2D-2082ab53.js";import"./Container-6e479c6e.js";import"./EffectView-1ebf3123.js";import"./definitions-74ad6ac7.js";import"./enums-b14466b3.js";import"./Texture-0cb1f60b.js";import"./color-9dbb79eb.js";import"./enums-55085e26.js";import"./VertexElementDescriptor-2925c6af.js";import"./number-e491b09e.js";import"./BaseGraphicContainer-880a64e7.js";import"./FeatureContainer-b0866c89.js";import"./AttributeStoreView-61b17f15.js";import"./TiledDisplayObject-3d778797.js";import"./WGLContainer-383a9410.js";import"./VertexArrayObject-42a98d28.js";import"./ProgramTemplate-f2a4c3cb.js";import"./GeometryUtils-3c96c3cc.js";import"./alignmentUtils-ae955d28.js";import"./StyleDefinition-fbc907c2.js";import"./config-1337d16e.js";import"./earcut-3cf5ced9.js";import"./visualVariablesUtils-5bd1b0d1.js";import"./cimAnalyzer-228b82f1.js";import"./fontUtils-dfb0dc71.js";import"./BidiEngine-9a40f2f4.js";import"./GeometryUtils-53652037.js";import"./Rect-ea14f53a.js";import"./quantizationUtils-b079a230.js";import"./floatRGBA-78333eeb.js";import"./ExpandedCIM-5eb8fb15.js";import"./util-2bc45a5e.js";import"./TileContainer-7273c9d9.js";import"./vec3f32-ad1dc57f.js";import"./normalizeUtilsSync-1ff8027c.js";import"./projectionSupport-2af61e7e.js";import"./json-48e3ea08.js";import"./Matcher-05b0d370.js";import"./tileUtils-c2f19f52.js";import"./TurboLine-dbc7c8f3.js";import"./ComputedAttributeStorage-d1a71403.js";import"./arcadeTimeUtils-4ea33e2f.js";import"./executionError-c92d3b85.js";const w={remove(){},pause(){},resume(){}};let e=class extends c(n){constructor(){super(...arguments),this._highlightIds=new Map}attach(){this.graphicsView=new u({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:this.layer.graphics,container:new d(this.view.featuresTilingScheme)}),this._updateHighlight(),this.container.addChild(this.graphicsView.container),this.addAttachHandles(this.layer.on("graphic-update",this.graphicsView.graphicUpdateHandler))}detach(){this.container.removeAllChildren(),this.graphicsView=p(this.graphicsView)}async hitTest(i){return this.graphicsView?this.graphicsView.hitTest(i).map(t=>({type:"graphic",graphic:t,mapPoint:i,layer:this.layer})):null}async fetchPopupFeatures(i){return this.graphicsView?this.graphicsView.hitTest(i).filter(t=>!!t.popupTemplate):[]}queryGraphics(){return Promise.resolve(this.graphicsView.graphics)}update(i){this.graphicsView.processUpdate(i)}moveStart(){}viewChange(){this.graphicsView.viewChange()}moveEnd(){}isUpdating(){return!this.graphicsView||this.graphicsView.updating}highlight(i){let t;typeof i=="number"?t=[i]:i instanceof a?t=[i.uid]:Array.isArray(i)&&i.length>0?t=typeof i[0]=="number"?i:i.map(h=>h&&h.uid):o.isCollection(i)&&i.length>0&&(t=i.map(h=>h&&h.uid).toArray());const r=t==null?void 0:t.filter(g);return r!=null&&r.length?(this._addHighlight(r),{remove:()=>this._removeHighlight(r)}):w}_addHighlight(i){for(const t of i)if(this._highlightIds.has(t)){const r=this._highlightIds.get(t);this._highlightIds.set(t,r+1)}else this._highlightIds.set(t,1);this._updateHighlight()}_removeHighlight(i){for(const t of i)if(this._highlightIds.has(t)){const r=this._highlightIds.get(t)-1;r===0?this._highlightIds.delete(t):this._highlightIds.set(t,r)}this._updateHighlight()}_updateHighlight(){var i;(i=this.graphicsView)==null||i.setHighlight(Array.from(this._highlightIds.keys()))}};s([m()],e.prototype,"graphicsView",void 0),e=s([l("esri.views.2d.layers.GraphicsLayerView2D")],e);const gi=e;export{gi as default};
