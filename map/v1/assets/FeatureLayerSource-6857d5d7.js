import{fJ as k,dp as M,ah as A,ai as x,fK as C,aX as j,g as N,fL as U,G as f,aG as v,fM as D,bs as P,fN as Q,fO as L,fP as J,_ as G,q as E,aY as V,fQ as Y,fR as H,Y as W,S as X,T as z,fS as $,fT as Z,K as I,fU as K,bH as B,ak as ee,dC as te,fV as se,aC as ae,aD as re,al as ne,f9 as ie}from"./index-92ca6b80.js";import{e as oe}from"./mat4f64-1413b4a7.js";import{m as ue}from"./MeshGeoreferencedRelativeVertexSpace-6fb99c33.js";import{r as le}from"./vec32-c14fd364.js";import{A as de}from"./External-9c7bb3ef.js";import{isFeatureIdentifierArrayWithGlobalId as ce,isFeatureIdentifierArrayWithObjectId as pe}from"./editingSupport-9329be33.js";function he(t){const{vertexSpace:e}=t;if(e.isRelative)return t.clone();const{anchor:a}=t,s=a.clone(),r=k(ye,[-s.x,-s.y,-s.z]),u=new ue({origin:[s.x,s.y,s.z]}),n=t.cloneWithVertexSpace(u),{position:l}=n.vertexAttributes;return n.vertexAttributes.position=le(new Float64Array(l.length),l,r),n.vertexAttributesChanged(),n}const ye=oe(),me=new M({originalAndCurrentFeatures:"original-and-current-features",none:"none"}),fe=new Set(["Feature Layer","Oriented Imagery Layer","Table"]),ge=new M({Started:"published",Publishing:"publishing",Stopped:"unavailable"});let w=class extends C{constructor(){super(...arguments),this.type="feature-layer",this.refresh=j(async()=>{var a,s;await this.load();const t=(a=this.sourceJSON.editingInfo)==null?void 0:a.lastEditDate;if(t==null)return{dataChanged:!0,updates:{}};try{await this._fetchService(null)}catch{return{dataChanged:!0,updates:{}}}const e=t!==((s=this.sourceJSON.editingInfo)==null?void 0:s.lastEditDate);return{dataChanged:e,updates:e?{editingInfo:this.sourceJSON.editingInfo,extent:this.sourceJSON.extent}:null}}),this._ongoingAssetUploads=new Map}load(t){const e=t!=null?t.signal:null,a=this.layer.sourceJSON;return this.addResolvingPromise(this._fetchService(a,e)),Promise.resolve(this)}get queryTask(){var c;const{capabilities:t,parsedUrl:e,dynamicDataSource:a,infoFor3D:s,gdbVersion:r,spatialReference:u,fieldsIndex:n}=this.layer,l=N("featurelayer-pbf")&&(t==null?void 0:t.query.supportsFormatPBF)&&s==null,i=((c=t==null?void 0:t.operations)==null?void 0:c.supportsQueryAttachments)??!1;return new U({url:e.path,pbfSupported:l,fieldsIndex:n,infoFor3D:s,dynamicDataSource:a,gdbVersion:r,sourceSpatialReference:u,queryAttachmentsSupported:i})}async addAttachment(t,e){await this.load();const a=t.attributes[this.layer.objectIdField],s=this.layer.parsedUrl.path+"/"+a+"/addAttachment",r=this._getLayerRequestOptions(),u=this._getFormDataForAttachment(e,r.query);try{const n=await f(s,{body:u});return this._createFeatureEditResult(n.data.addAttachmentResult)}catch(n){throw this._createAttachmentErrorResult(a,n)}}async updateAttachment(t,e,a){await this.load();const s=t.attributes[this.layer.objectIdField],r=this.layer.parsedUrl.path+"/"+s+"/updateAttachment",u=this._getLayerRequestOptions({query:{attachmentId:e}}),n=this._getFormDataForAttachment(a,u.query);try{const l=await f(r,{body:n});return this._createFeatureEditResult(l.data.updateAttachmentResult)}catch(l){throw this._createAttachmentErrorResult(s,l)}}async applyEdits(t,e){var _,q,R,S,O,T;await this.load();const{layer:a}=this,s=a.infoFor3D,r=s!=null,u=r||((e==null?void 0:e.globalIdUsed)??!1),n=r?await this._uploadMeshesAndGetAssetMapEditsJSON(t):null,l=((_=t.addFeatures)==null?void 0:_.map(F=>this._getFeatureJSON(F,s)))??[],i=(await Promise.all(l)).filter(v),c=((q=t.updateFeatures)==null?void 0:q.map(F=>this._getFeatureJSON(F,s)))??[],h=(await Promise.all(c)).filter(v),y=this._getFeatureIds(t.deleteFeatures,u);D(i,h,a.spatialReference);const p=await this._getAttachmentEditsJSON(t),b=a.capabilities.editing.supportsAsyncApplyEdits&&r,o={gdbVersion:(e==null?void 0:e.gdbVersion)||a.gdbVersion,rollbackOnFailure:e==null?void 0:e.rollbackOnFailureEnabled,useGlobalIds:u,returnEditMoment:e==null?void 0:e.returnEditMoment,usePreviousEditMoment:e==null?void 0:e.usePreviousEditMoment,sessionId:e==null?void 0:e.sessionId,async:b};e!=null&&e.returnServiceEditsOption?(o.edits=JSON.stringify([{id:a.layerId,adds:i,updates:h,deletes:y,attachments:p,assetMaps:n}]),o.returnServiceEditsOption=me.toJSON(e==null?void 0:e.returnServiceEditsOption),o.returnServiceEditsInSourceSR=e==null?void 0:e.returnServiceEditsInSourceSR):(o.adds=i.length?JSON.stringify(i):null,o.updates=h.length?JSON.stringify(h):null,o.deletes=y.length?u?JSON.stringify(y):y.join(","):null,o.attachments=p&&JSON.stringify(p),o.assetMaps=n!=null?JSON.stringify(n):void 0);const d=this._getLayerRequestOptions({method:"post",query:o}),m=e!=null&&e.returnServiceEditsOption?a.url:a.parsedUrl.path,g=b?await this._asyncApplyEdits(m+"/applyEdits",d):await f(m+"/applyEdits",d);if(!((R=a.capabilities.operations)!=null&&R.supportsEditing)&&((O=(S=a.effectiveCapabilities)==null?void 0:S.operations)!=null&&O.supportsEditing)){const F=(T=ie)==null?void 0:T.findCredential(a.url);await(F==null?void 0:F.refreshToken())}return this._createEditsResult(g)}async deleteAttachments(t,e){await this.load();const a=t.attributes[this.layer.objectIdField],s=this.layer.parsedUrl.path+"/"+a+"/deleteAttachments";try{return(await f(s,this._getLayerRequestOptions({query:{attachmentIds:e.join(",")},method:"post"}))).data.deleteAttachmentResults.map(this._createFeatureEditResult)}catch(r){throw this._createAttachmentErrorResult(a,r)}}fetchRecomputedExtents(t={}){const e=t.signal;return this.load({signal:e}).then(async()=>{const a=this._getLayerRequestOptions({...t,query:{returnUpdates:!0}}),{layerId:s,url:r}=this.layer,{data:u}=await f(`${r}/${s}`,a),{id:n,extent:l,fullExtent:i,timeExtent:c}=u,h=l||i;return{id:n,fullExtent:h&&P.fromJSON(h),timeExtent:c&&Q.fromJSON({start:c[0],end:c[1]})}})}async queryAttachments(t,e={}){await this.load();const a=this._getLayerRequestOptions(e);return this.queryTask.executeAttachmentQuery(t,a)}async queryFeatures(t,e){return await this.load(),this.queryTask.execute(t,{...e,query:this._createRequestQueryOptions(e)})}async queryFeaturesJSON(t,e){return await this.load(),this.queryTask.executeJSON(t,{...e,query:this._createRequestQueryOptions(e)})}async queryObjectIds(t,e){return await this.load(),this.queryTask.executeForIds(t,{...e,query:this._createRequestQueryOptions(e)})}async queryFeatureCount(t,e){return await this.load(),this.queryTask.executeForCount(t,{...e,query:this._createRequestQueryOptions(e)})}async queryExtent(t,e){return await this.load(),this.queryTask.executeForExtent(t,{...e,query:this._createRequestQueryOptions(e)})}async queryRelatedFeatures(t,e){return await this.load(),this.queryTask.executeRelationshipQuery(t,{...e,query:this._createRequestQueryOptions(e)})}async queryRelatedFeaturesCount(t,e){return await this.load(),this.queryTask.executeRelationshipQueryForCount(t,{...e,query:this._createRequestQueryOptions(e)})}async queryTopFeatures(t,e){return await this.load(),this.queryTask.executeTopFeaturesQuery(t,{...e,query:this._createRequestQueryOptions(e)})}async queryTopObjectIds(t,e){return await this.load(),this.queryTask.executeForTopIds(t,{...e,query:this._createRequestQueryOptions(e)})}async queryTopExtents(t,e){return await this.load(),this.queryTask.executeForTopExtents(t,{...e,query:this._createRequestQueryOptions(e)})}async queryTopCount(t,e){return await this.load(),this.queryTask.executeForTopCount(t,{...e,query:this._createRequestQueryOptions(e)})}async fetchPublishingStatus(){if(!L(this.layer.url))return"unavailable";const t=J(this.layer.url,"status"),e=await f(t,{query:{f:"json"}});return ge.fromJSON(e.data.status)}async uploadAssets(t,e){const{uploadAssets:a}=await G(()=>import("./uploadAssets-8a730c5d.js"),["assets/uploadAssets-8a730c5d.js","assets/index-92ca6b80.js","assets/index-dc13cc80.css","assets/External-9c7bb3ef.js"]);return a(t,{layer:this.layer,ongoingUploads:this._ongoingAssetUploads},e)}async _asyncApplyEdits(t,e){const a=(await f(t,e)).data.statusUrl;for(;;){const s=(await f(a,{query:{f:"json"},responseType:"json"})).data;switch(s.status){case"Completed":return f(s.resultUrl,{query:{f:"json"},responseType:"json"});case"CompletedWithErrors":throw new E("async-applyEdits-failed","asynchronous applyEdits call failed.");case"Failed ImportChanges":case"InProgress":case"Pending":case"ExportAttachments":case"ExportChanges":case"ExportingData":case"ExportingSnapshot":case"ImportAttachments":case"ProvisioningReplica":case"UnRegisteringReplica":break;default:throw new E("async-applyEdits-failed","asynchronous applyEdits call failed (undefined response status)")}await V(Re)}}_createRequestQueryOptions(t){const e={...this.layer.customParameters,token:this.layer.apiKey,...t==null?void 0:t.query};return this.layer.datesInUnknownTimezone&&(e.timeReferenceUnknownClient=!0),e}async _fetchService(t,e){if(!t){const{data:s}=await f(this.layer.parsedUrl.path,this._getLayerRequestOptions({query:N("featurelayer-advanced-symbols")?{returnAdvancedSymbols:!0}:{},signal:e}));t=s}this.sourceJSON=await this._patchServiceJSON(t,e);const a=t.type;if(!fe.has(a))throw new E("feature-layer-source:unsupported-type",`Source type "${a}" is not supported`)}async _patchServiceJSON(t,e){var a;if(t.type!=="Table"&&t.geometryType&&!((a=t==null?void 0:t.drawingInfo)!=null&&a.renderer)&&!t.defaultSymbol){const s=Y(t.geometryType).renderer;H("drawingInfo.renderer",s,t)}if(t.geometryType==="esriGeometryMultiPatch"&&t.infoFor3D&&(t.geometryType="mesh"),t.extent==null)try{const{data:s}=await f(this.layer.url,this._getLayerRequestOptions({signal:e}));s.spatialReference&&(t.extent={xmin:0,ymin:0,xmax:0,ymax:0,spatialReference:s.spatialReference})}catch(s){W(s)}return t}async _getFeatureJSON(t,e){const{geometry:a}=t,s={...t.attributes};if(e!=null&&(a==null?void 0:a.type)==="mesh"){const{transformFieldRoles:r}=e,{origin:u,spatialReference:n,transform:l}=a,i=this.layer.spatialReference;await X(n,i);const c=z(u,i);if(s[r.originX]=c.x,s[r.originY]=c.y,s[r.originZ]=c.z??0,l!=null){const{translation:h,scale:y,rotation:p}=l,{vertexSpace:b}=a,o=b.isGeoreferenced?1:$(n)/$(i);s[r.translationX]=h[0]*o,s[r.translationY]=-h[2]*o,s[r.translationZ]=h[1]*o,s[r.scaleX]=y[0],s[r.scaleY]=y[2],s[r.scaleZ]=y[1],s[r.rotationX]=p[0],s[r.rotationY]=p[2],s[r.rotationZ]=p[1],s[r.rotationDeg]=p[3]}return{geometry:null,attributes:s}}return a==null?{attributes:s}:a.type==="mesh"||a.type==="extent"?null:{geometry:a.toJSON(),attributes:s}}async _getAttachmentEditsJSON(t){const e=await Promise.all((t.addAttachments??[]).map(r=>this._getAttachmentEditJSON(r))),a=await Promise.all((t.updateAttachments??[]).map(r=>this._getAttachmentEditJSON(r))),s=t.deleteAttachments??[];return e.length||a.length||s.length?{adds:e,updates:a,deletes:[...s]}:null}async _getAttachmentEditJSON(t){const{feature:e,attachment:a}=t,{globalId:s,name:r,contentType:u,data:n,uploadId:l}=a,i={globalId:s,parentGlobalId:null,contentType:null,name:null,uploadId:null,data:null};if(e&&(i.parentGlobalId="attributes"in e?e.attributes&&e.attributes[this.layer.globalIdField]:e.globalId),l)i.uploadId=l;else if(n){const c=await Z(n);c&&(i.contentType=c.mediaType,i.data=c.data),n instanceof File&&(i.name=n.name)}return r&&(i.name=r),u&&(i.contentType=u),i}async _uploadMeshesAndGetAssetMapEditsJSON(t){const{addAssetFeatures:e}=t;if(!(e!=null&&e.length))return null;const a=await this._filterRedundantAssetMaps(e);if(!(e!=null&&e.length))return null;const s=new Array,r=new Map;for(const u of a){const{geometry:n}=u,{vertexSpace:l}=n;if(l.isRelative)s.push(n);else{const i=he(n);r.set(i,n),u.geometry=i,s.push(i)}}await this.uploadAssets(s);for(const[u,n]of r)n.addExternalSources(u.metadata.externalSources.items);return{adds:this._getAssetMapEditsJSON(a),updates:[],deletes:[]}}_getAssetMapEditsJSON(t){const e=new Array,a=this.layer.globalIdField,s=this.layer.parsedUrl;for(const r of t){const u=r.geometry,{metadata:n}=u,l=n.getExternalSourcesOnService(s),i=r.getAttribute(a);if(l.length===0){I.getLogger(this).error(`Skipping feature ${i}. The mesh it is associated with has not been uploaded to the service and cannot be mapped to it.`);continue}const{source:c}=l.find(de)??l[0],{vertexSpace:h}=u,y=h.isGeoreferenced?["PROJECT_VERTICES"]:[];for(const p of c)p.parts.length===1?e.push({globalId:K(),parentGlobalId:i,assetName:p.assetName,assetHash:p.parts[0].partHash,flags:y}):I.getLogger(this).error(`Skipping asset ${p.assetName}. It does not have exactly one part, so we cannot map it to a feature.`)}return e}_getFeatureIds(t,e){if(!t||t.length===0)return[];if(e&&ce(t))return t.map(r=>r.globalId);if(pe(t))return t.map(r=>r.objectId);const{layer:a}=this,s=e?a.globalIdField:a.objectIdField;return s?t.map(r=>r.getAttribute(s)):[]}_createEditsResult(t){var i,c,h,y,p,b;const e=t.data,{layerId:a}=this.layer,s=[];let r=null;if(Array.isArray(e))for(const o of e)s.push({id:o.id,editedFeatures:o.editedFeatures}),o.id===a&&(r={addResults:o.addResults??[],updateResults:o.updateResults??[],deleteResults:o.deleteResults??[],attachments:o.attachments,editMoment:o.editMoment});else r=e;const u=r==null?void 0:r.assetMaps;if(u){for(const o of u.addResults)o.success||I.getLogger(this).error(`Failed to map asset to feature with globalId ${o.globalId}.`);for(const o of u.updateResults)o.success||I.getLogger(this).error(`Failed to map asset to feature with globalId ${o.globalId}.`)}const n=r==null?void 0:r.attachments,l={addFeatureResults:((i=r==null?void 0:r.addResults)==null?void 0:i.map(this._createFeatureEditResult,this))??[],updateFeatureResults:((c=r==null?void 0:r.updateResults)==null?void 0:c.map(this._createFeatureEditResult,this))??[],deleteFeatureResults:((h=r==null?void 0:r.deleteResults)==null?void 0:h.map(this._createFeatureEditResult,this))??[],addAttachmentResults:n&&n.addResults?n.addResults.map(this._createFeatureEditResult,this):[],updateAttachmentResults:n&&n.updateResults?n.updateResults.map(this._createFeatureEditResult,this):[],deleteAttachmentResults:n&&n.deleteResults?n.deleteResults.map(this._createFeatureEditResult,this):[]};if(r!=null&&r.editMoment&&(l.editMoment=r.editMoment),s.length>0){l.editedFeatureResults=[];for(const o of s){const{editedFeatures:d}=o,m=d!=null&&d.spatialReference?new B(d.spatialReference):null;l.editedFeatureResults.push({layerId:o.id,editedFeatures:{adds:((y=d==null?void 0:d.adds)==null?void 0:y.map(g=>this._createEditedFeature(g,m)))||[],updates:((p=d==null?void 0:d.updates)==null?void 0:p.map(g=>({original:this._createEditedFeature(g[0],m),current:this._createEditedFeature(g[1],m)})))||[],deletes:((b=d==null?void 0:d.deletes)==null?void 0:b.map(g=>this._createEditedFeature(g,m)))||[],spatialReference:m}})}}return l}_createEditedFeature(t,e){return new ee({attributes:t.attributes,geometry:te({...t.geometry,spatialReference:e})})}_createFeatureEditResult(t){const e=t.success===!0?null:t.error||{code:void 0,description:void 0};return{objectId:t.objectId,globalId:t.globalId,error:e?new E("feature-layer-source:edit-failure",e.description,{code:e.code}):null}}_createAttachmentErrorResult(t,e){const a=e.details.messages&&e.details.messages[0]||e.message,s=e.details.httpStatus||e.details.messageCode;return{objectId:t,globalId:null,error:new E("feature-layer-source:attachment-failure",a,{code:s})}}_getFormDataForAttachment(t,e){const a=t instanceof FormData?t:t&&t.elements?new FormData(t):null;if(a)for(const s in e){const r=e[s];r!=null&&(a.set?a.set(s,r):a.append(s,r))}return a}_getLayerRequestOptions(t={}){const{parsedUrl:e,gdbVersion:a,dynamicDataSource:s}=this.layer;return{...t,query:{gdbVersion:a,layer:s?JSON.stringify({source:s}):void 0,...e.query,f:"json",...this._createRequestQueryOptions(t)},responseType:"json"}}async _filterRedundantAssetMaps(t){const{layer:e}=this,{globalIdField:a,infoFor3D:s,parsedUrl:r}=e;if(s==null||a==null)return t;const u=se(s);if(u==null)return t;const n=J(r.path,`../${u.id}`),l=new Array,i=new Array;for(const d of t)d.geometry.metadata.getExternalSourcesOnService(r).length>0?i.push(d):l.push(d);const c=i.map(d=>d.getAttribute(a)).filter(v);if(c.length===0)return t;const{assetMapFieldRoles:{parentGlobalId:h,assetHash:y}}=s,p=new ae;p.where=`${h} IN (${c.map(d=>`'${d}'`)})`,p.outFields=[y,h],p.returnGeometry=!1;const b=await re(n,p),{features:o}=b;return o.length===0?t:[...l,...i.filter(d=>{const m=d.getAttribute(a);if(!m)return!0;const{metadata:g}=d.geometry,_=o.filter(R=>R.getAttribute(h)===m);if(_.length===0)return!0;const q=_.map(R=>R.getAttribute(y));return g.getExternalSourcesOnService(r).flatMap(({source:R})=>R.flatMap(S=>S.parts.map(O=>O.partHash))).some(R=>q.every(S=>R!==S))})]}};A([x()],w.prototype,"type",void 0),A([x({constructOnly:!0})],w.prototype,"layer",void 0),A([x({readOnly:!0})],w.prototype,"queryTask",null),w=A([ne("esri.layers.graphics.sources.FeatureLayerSource")],w);const Re=1e3,qe=w;export{qe as default};
